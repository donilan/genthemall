<%/*
name="web-controller"
type="javaCode"
description="Web controller"
path="__PACKAGE_PATH__/controller/__PASCAL_NAME__Controller.java"
version="0.4.0"
*/%>
package ${packageName}.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ii2d.dbase.mybatis.Page;
import ${packageName}.model.${pascalName};

@Controller
@RequestMapping("/${camelName}")
public class ${pascalName}Controller extends com.ii2d.dbase.web.controller.AbstractController {
	
	@RequestMapping(method = RequestMethod.GET, value="advancedSearch")
	public String advancedSearch(
			@ModelAttribute(value="${camelName}") ${pascalName} searchObj,
			@RequestParam(value = "page", defaultValue="1") int page,
			@RequestParam(value = "rows", defaultValue="10") int rows,
			ModelMap model) {
		Page pageInstance = commonService.queryForPage(searchObj, page, rows);
		model.addAttribute(pageInstance);
		return "${camelName}/listTable";
	}
	
	@RequestMapping(method = RequestMethod.GET, value="search")
	public String search(
			@RequestParam(value="keyword") String keyword,
			@RequestParam(value = "page", defaultValue="1") int page,
			@RequestParam(value = "rows", defaultValue="10") int rows,
			ModelMap model) {
		
		return advancedSearch(this._makeSearchObject(keyword), page, rows, model);
	}
	
	@RequestMapping(method = RequestMethod.GET, value="count")
	public @ResponseBody String count(@ModelAttribute(value="${camelName}") ${pascalName} searchObj) {
		return String.valueOf(commonService.count(searchObj));
	}
	
	@RequestMapping(method = RequestMethod.GET, value="count4search")
	public @ResponseBody String count4search(@RequestParam(value="keyword") String keyword) {
		return count(_makeSearchObject(keyword));
	}
	
	private ${pascalName} _makeSearchObject(String keyword) {
		${pascalName} searchObj = new ${pascalName}();
		<%columns.findAll{it.classType == 'java.lang.String'}.each {%>
		searchObj.getOrLike().put("${it.camelName}", keyword);<%}%>
		return searchObj;
	}
	
	@RequestMapping(method = RequestMethod.GET, value="list")
	public String list(
			@ModelAttribute(value="${camelName}") ${pascalName} searchObj,
			ModelMap model) {
		List<${pascalName}> list = commonService.queryForList(searchObj);
		model.addAttribute(list);
		return "${camelName}/list";
	}
	
	@RequestMapping(method = RequestMethod.POST, value="save")
	public @ResponseBody String save(
			@ModelAttribute(value="${camelName}") ${pascalName} instance) {
		commonService.insert(instance);
		return "success";
	}
	<%if(idColumn) {%>
	@RequestMapping(method = RequestMethod.POST, value="update/{id}")
	public @ResponseBody String update(
			@ModelAttribute(value="${camelName}") ${pascalName} instance,
			@PathVariable(value = "id") ${idColumn.classType} ${idColumn.camelName}) {
		instance.${idColumn.setter}(${idColumn.camelName});
		commonService.update(instance);
		return "success";
	}
	<%}%>

	@Override
	public String getControllerName() {
		return "${camelName}";
	}

	@Override
	public Class<?> getInstanceClass() {
		return ${pascalName}.class;
	}
}
