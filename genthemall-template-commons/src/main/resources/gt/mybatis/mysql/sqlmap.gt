<%/*
name="sqlmap-mysql"
type="resources"
description="Mysql mybatis sqlmap template"
path="mybatis/__CAMEL_NAME__.xml"
version="0.5.1"
*/%>
{{ extends base-sqlmap }}
{{ block content }}
<% if(idColumn) { //!-- generate if have id column. %>
	<!-- select by id sql -->
	<select id="select_by_id_${pascalName}" useCache="true" resultMap="${camelName}" >
		SELECT * FROM ${tableName} WHERE ${idColumn.columnName} = #{value}
	</select>
<% }%>
	<select id="select_${pascalName}" resultMap="${camelName}" >
		SELECT * FROM ${tableName}
		<trim prefix="WHERE" prefixOverrides="OR|AND">
			<%columnWithoutId.each { %>
			<if test="orEq.${it.camelName} != null">OR ${it.columnName} = #{orEq.${it.camelName}}</if>
			<if test="orLike.${it.camelName} != null">OR ${it.columnName} LIKE concat('%', #{orLike.${it.camelName}}, '%')</if>
			<if test="andEq.${it.camelName} != null">AND ${it.columnName} = #{andEq.${it.camelName}}</if>
			<if test="andLike.${it.camelName} != null">AND ${it.columnName} LIKE concat('%', #{andLike.${it.camelName}}, '%')</if>
				<%if(it.classType != 'java.lang.String'){%>
			<if test="orBetween.${it.camelName}Begin != null and orBetween.${it.camelName}End != null">
				OR ${it.columnName} BETWEEN STR_TO_DATE(#{orBetween.${it.camelName}Begin}, '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(#{orBetween.${it.camelName}End}, '%Y-%m-%d %H:%i:%s')
			</if>
			<if test="andBetween.${it.camelName}Begin != null and andBetween.${it.camelName}End != null">
				AND ${it.columnName} BETWEEN STR_TO_DATE(#{andBetween.${it.camelName}Begin}, '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(#{andBetween.${it.camelName}End}, '%Y-%m-%d %H:%i:%s')
			</if>
				<%}%>
			<%}%>
			<%if(statusColumn) {%>
			<if test="andEq.${statusColumn.camelName} == null">AND ${statusColumn.columnName} &gt; -1</if>
			<%}%>
		</trim>
		<choose>
			<when test="limitStartRow gt -1 and limitEndRow gt 0" >
				LIMIT #{limitStartRow}, #{limitEndRow}
			</when>
			<when test="orderBy.size gt 0">
				ORDER BY 
				<trim suffixOverrides=",">
					<foreach collection="orderBy" item="it">\${it}, </foreach>
				</trim>
			</when>
		</choose>
	</select>
	
	<insert id="insert_${pascalName}" parameterType="${modelClassName}">
		INSERT INTO ${tableName} (${insertColumnsStr})
		VALUES (${insertColumnValuesStr})
		<% if(idColumn) { //!-- generate if have id column. %>
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="${idColumn.columnName}">
			SELECT LAST_INSERT_ID()
		</selectKey><%}%>
	</insert>

<% if(idColumn) { //!-- generate if have id column. %>
	<update id="update_${pascalName}" parameterType="${modelClassName}">
		UPDATE ${tableName} SET
		<trim prefixOverrides=",">
			<%columnWithoutId.each {%>
			<if test="${it.camelName} != null">, ${it.columnName} = #{${it.camelName}}</if><%}%>
		</trim>
		WHERE ${idColumn.columnName} = #{${idColumn.camelName}}
	</update>
<%}%>	
<% if(idColumn) { //!-- generate if have id column. %>
	<delete id="delete_${pascalName}" >
	<%if(statusColumn) {%>
		UPDATE ${tableName} SET ${statusColumn.columnName} = -1 WHERE ${idColumn.columnName} = #{${idColumn.camelName}}
	<%} else {%>
		DELETE FROM ${tableName} WHERE ${idColumn.columnName} = #{${idColumn.camelName}}
	<%}%>
	</delete>
<%}%>
{{ endblock }}