<% 
import static com.ii2d.dbase.util.DNameUtils.toPascalName
import static com.ii2d.dbase.util.DNameUtils.toCamelName
import static com.ii2d.dbase.util.DDBUtils.TYPES
import static com.ii2d.dbase.util.DDBUtils.DB_TYPE_MAP
import static com.ii2d.genthemall.util.Functions.*

def unlistableColumns = ['Id', 'Password']
def uneditableColumns = ['Id', 'Status']
def datetimeColumnTypes = ['TIMESTAMP']
%>
project 		= 'base'
prefix 			= project
prefixPath 		= prefix + '/'
domain 			= 'ii2d.com'
packagePrefix 	= domain.split('\\\\.')[-1..0].join('.')
packageName 	= [packagePrefix, project].join('.').replaceAll('\\\\.+\\\$', '')
name 			= '${toPascalName(table)}'
tableName 		= '${table}'
packagePath 	= packageName.replaceAll('\\\\.', '/')
pascalName 		= name[0].toUpperCase()+name[1..-1]
camelName 		= name[0].toLowerCase()+name[1..-1]
modelClassName 	= packageName + '.model.' + pascalName
modelSuperClass = 'com.ii2d.mybatis.model.BaseMyBatisModel'

columns 	= 
[ <% attrs.eachWithIndex { p, i-> %>
	[
		group: 			project,
		name: 			'${toPascalName(p.name)}',
		pascalName: 	'${toPascalName(p.name)}',
		camelName: 		'${toCamelName(p.name)}',
		columnName: 	'${p.name}',
		columnType: 	'${TYPES[p.columnType]}',
		classType: 		'${DB_TYPE_MAP[p.className]? DB_TYPE_MAP[p.className]: p.className}',
		type: 			'${toCamelName(p.name)}',
		order: 			${i},
		minLength: 		0,
		maxLength: 		${p.length},
		getter: 		'get${toPascalName(p.name)}',
		setter: 		'set${toPascalName(p.name)}',
		isShow: 		${!'id'.equalsIgnoreCase(p.name)},
		isListable: 	${!unlistableColumns.contains(toPascalName(p.name))},
		isNullable: 	${p.nullable},
		isId: 			${'id'.equalsIgnoreCase(p.name)},
		isStatus: 		${'status'.equalsIgnoreCase(p.name)}
	],<%}%>
]
idColumn 			= columns.find{ it.isId }
idColumns			= columns.findAll{ it.isId }
statusColumn		= columns.find{ it.isStatus }
columnWithoutId 	= columns.findAll{ !it.isId }
allColumns			= fartherTable? columns + fartherTable.columns: columns
allColumnsWithoutId = allColumns.findAll{ !it.isId }

	
